{"version":3,"sources":["helpers/history.js","config.js","helpers/authHeader.js","helpers/handleResponse.js","constants/user.constants.js","constants/alert.constants.js","reducers/users.reducer.js","reducers/index.js","reducers/alert.reducer.js","helpers/store.js","actions/alert.actions.js","Login.js","services/spotify.service.js","actions/user.actions.js","components/AppBar.js","Main.js","components/MessageSnackbar.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","config","isDevelopment","process","loggedItem","homepage","spotifyApi","url","scope","redirect_uri","client_id","authHeader","user","JSON","parse","localStorage","getItem","contentType","Content-Type","access_token","Object","objectSpread","Authorization","handleResponse","response","text","then","ok","status","removeItem","window","location","reload","error","data","message","statusText","Promise","reject","console","log","userConstants","GET_PROFILE_REQUEST","GET_PROFILE_SUCCESS","GET_PROFILE_FAILURE","alertConstants","SUCCESS","ERROR","INFO","CLEAR","UNDO","defaultState","display_name","rootReducer","combineReducers","alert","state","arguments","length","undefined","action","type","undo","users","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","alertActions","success","callbacks","info","clear","authWindow","spotifyService","getMe","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","opts","wrap","_context","prev","next","method","headers","concat","fetch","abrupt","sent","stop","apply","this","userActions","dispatch","failure","toString","LoginLink","React","forwardRef","props","ref","react_default","createElement","react_router_dom","assign","innerRef","to","AppBar","userLoged","classes","className","root","AppBar_AppBar","position","Container","Toolbar","Typography","variant","title","Button","color","component","Component","withStyles","theme","flexGrow","menuButton","marginRight","spacing","connect","Main","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hashValues","queryString","hash","setItem","stringify","self","top","opener","parent","postMessage","Fragment","CssBaseline","components_AppBar","content","appBarSpacer","withRouter","Login","width","height","logged","updateWindowDimensions","bind","assertThisInitialized","onAuthorize","onCallback","addEventListener","removeEventListener","setState","innerWidth","innerHeight","close","left","set","response_type","show_dialog","open","react_router","layout","Paper","paper","Avatar","avatar","LockOutlined_default","onClick","fullWidth","submit","defineProperty","display","marginLeft","breakpoints","up","marginTop","flexDirection","alignItems","padding","margin","backgroundColor","palette","secondary","main","form","variantIcon","CheckCircleIcon","warning","WarningIcon","ErrorIcon","InfoIcon","MessageSnackbar","_this$props","onClose","onUndo","other","objectWithoutProperties","Icon","SnackbarContent","classNames","aria-describedby","id","icon","iconVariant","key","undoButton","size","IconButton","aria-label","Close_default","green","dark","primary","grey","getContrastText","indigo","amber","fontSize","opacity","unit","createMuiTheme","typography","useNextVariants","App","MuiThemeProvider_default","Snackbar","anchorOrigin","vertical","horizontal","handleClose","autoHideDuration","components_MessageSnackbar","path","connectedApp","Boolean","hostname","match","ReactDOM","render","react_redux_es","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.278e5fee.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","const isDevelopment = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\nexport const config = {\n    isDevelopment,\n    loggedItem: \"user\",\n    homepage: isDevelopment ? \"\" : \"/portify\",\n    spotifyApi: {\n        url: \"https://api.spotify.com/v1\",\n        scope: \"user-read-private user-read-email playlist-read-private playlist-modify-public playlist-modify-private user-library-read user-library-modify playlist-read-collaborative\",\n        redirect_uri: isDevelopment ? \"http://localhost:3000/callback\" : \"https://ramosisw.github.io/portify/callback\",\n        client_id: \"ba0034384cb24045a078ea5ceae26480\"\n    }\n};\n","import { config } from '../config';\n\nexport function authHeader() {\n    const user = JSON.parse(localStorage.getItem(config.loggedItem));\n\n    const contentType = {\n        'Content-Type': 'application/json'\n    };\n\n    if (user && user.access_token) {\n        return { 'Authorization': 'Bearer ' + user.access_token, ...contentType };\n    } else {\n        return { ...contentType };\n    }\n}\n","import { config } from '../config';\n\nexport function handleResponse(response) {\n    return response.text().then(text => {\n        if (!response.ok) {\n            if (response.status === 401) {\n                // remove user from local storage to log user out\n                localStorage.removeItem(config.loggedItem);\n                window.location.reload(true);\n            }\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n        const data = text && JSON.parse(text);\n        console.log(data);\n        return data;\n    });\n}","export const userConstants = {\n    GET_PROFILE_REQUEST: 'USER_GET_PROFILE_REQUEST',\n    GET_PROFILE_SUCCESS: 'USER_GET_PROFILE_SUCCESS',\n    GET_PROFILE_FAILURE: 'USER_GET_PROFILE_FAILURE'\n}","export const alertConstants = {\n    SUCCESS: 'ALERT_SUCCESS',\n    ERROR: 'ALERT_ERROR',\n    INFO: 'ALERT_INFO',\n    CLEAR: 'ALERT_CLEAR',\n    UNDO: 'ALERT_UNDO'\n};","import { userConstants } from '../constants';\nconst defaultState = {\n    display_name: \"User Name\"\n};\nexport const users = (state = defaultState, action) => {\n    switch (action.type) {\n        case userConstants.GET_PROFILE_SUCCESS:\n            return {\n                ...action.data\n            };\n        default: return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { users } from './users.reducer'\nimport { alert } from './alert.reducer'\n\n\nconst rootReducer = combineReducers({\n    alert,\n    users,\n});\n\nexport default rootReducer;","import { alertConstants } from '../constants';\n\nexport function alert(state = {}, action) {\n  switch (action.type) {\n    case alertConstants.SUCCESS:\n      return {\n        type: 'success',\n        message: action.message\n      };\n    case alertConstants.ERROR:\n      return {\n        type: 'error',\n        message: action.message\n      };\n    case alertConstants.INFO:\n      return {\n        type: 'info',\n        message: action.message\n      };\n    case alertConstants.UNDO:\n      return {\n        ...action,\n        undo : true,\n        type: 'undo',\n        message: action.message,\n      }\n    case alertConstants.CLEAR:\n      return {};\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducers';\nimport { config } from '../config';\n\nconst loggerMiddleware = config.isDevelopment ? createLogger() : null;\n\nexport const store = createStore(\n    rootReducer,\n    config.isDevelopment ? applyMiddleware(thunkMiddleware, loggerMiddleware) : applyMiddleware(thunkMiddleware)\n);\n","import { alertConstants } from '../constants';\n\nexport const alertActions = {\n    success,\n    error,\n    undo,\n    info,\n    clear\n};\n\nfunction success(message) {\n    return { type: alertConstants.SUCCESS, message };\n}\n\nfunction error(message) {\n    return { type: alertConstants.ERROR, message };\n}\n\nfunction info(message) {\n    return { type: alertConstants.INFO, message };\n}\n\nfunction undo(message, callbacks) {\n    return { type: alertConstants.UNDO, message, ...callbacks };\n}\n\nfunction clear() {\n    return { type: alertConstants.CLEAR };\n}\n","import React, { Component } from 'react'\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { config } from './config'\nimport queryString from 'query-string';\nimport { Redirect } from 'react-router-dom';\n\nconst style = theme => ({\n    layout: {\n        width: 'auto',\n        display: 'block', // Fix IE11 issue.\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(400 + theme.spacing(3) * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\n    },\n    avatar: {\n        margin: theme.spacing(),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE11 issue.\n        marginTop: theme.spacing(),\n    },\n    submit: {\n        marginTop: theme.spacing(3),\n    },\n});\nlet authWindow;\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: 0,\n            height: 0,\n            logged: false\n        };\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n        this.onAuthorize = this.onAuthorize.bind(this);\n        this.onCallback = this.onCallback.bind(this);\n        window.addEventListener(\"message\", this.onCallback, false);\n        localStorage.removeItem(config.loggedItem);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n\n    onCallback() {\n        if (authWindow)\n            authWindow.close();\n        this.setState({ logged: true });\n    }\n\n    onAuthorize() {\n        const width = 480, height = 640;\n        const left = (this.state.width / 2) - (width / 2);\n        const top = (this.state.height / 2) - (height / 2);\n        const set = {\n            client_id: config.spotifyApi.client_id,\n            redirect_uri: config.spotifyApi.redirect_uri,\n            scope: config.spotifyApi.scope,\n            response_type: 'token',\n            show_dialog: 'true'\n        };\n        authWindow = window.open(\n            \"https://accounts.spotify.com/authorize?\" + queryString.stringify(set),\n            \"Spotify\",\n            'menubar=no,location=no,resizable=no,scrollbars=no,status=no, width=' + width + ', height=' + height + ', top=' + top + ', left=' + left\n        );\n    }\n\n    render() {\n        if (this.state.logged) {\n            return <Redirect to='/' />\n        }\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <main className={classes.layout}>\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockIcon />\n                        </Avatar>\n                        <Typography variant=\"h5\">We need your Authorization</Typography>\n                        <Button\n                            onClick={this.onAuthorize}\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}>\n                            Proced to Authorization\n                        </Button>\n                    </Paper>\n                </main>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withStyles(style)(Login);\n","import { config } from '../config';\nimport { authHeader, handleResponse } from '../helpers';\n\n\n\nconst getMe = async () => {\n    const opts = {\n        method: 'GET',\n        headers: {\n            ...authHeader()\n        }\n    };\n    const url = `${config.spotifyApi.url}/me`;\n    console.log(`Fetch GET: ${url}`);\n    return await fetch(url, opts).then(handleResponse);\n}\n\n\nexport const spotifyService = {\n    getMe\n}","import { userConstants } from '../constants';\nimport { spotifyService } from '../services';\nimport { alertActions } from './alert.actions';\n\nconst getMe = () => {\n    console.log(\"action.getMe\");\n    return dispatch => {\n        dispatch(request());\n        spotifyService.getMe().then(data => {\n            console.log(\"dispatch(success(data));\");\n            dispatch(success(data));\n        }, error => {\n            dispatch(failure(error.toString()));\n            dispatch(alertActions.error(error.toString()));\n        });\n    };\n\n    function request() { return { type: userConstants.GET_PROFILE_REQUEST } }\n    function success(data) { return { type: userConstants.GET_PROFILE_SUCCESS, data } }\n    function failure(error) { return { type: userConstants.GET_PROFILE_FAILURE, error } }\n}\n\n\nexport const userActions = {\n    getMe\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { config } from '../config';\nimport { userActions } from '../actions';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n});\n\nconst LoginLink = React.forwardRef((props, ref) => (\n  <Link innerRef={ref} to=\"/login\" {...props} />\n));\n\n\n\n\nclass AppBar extends React.Component {\n  state = {\n    userLoged : localStorage.getItem(config.loggedItem) ? true : false\n  }\n\n  componentDidMount() {\n    if (this.state.userLoged) {\n      this.props.dispatch(userActions.getMe());\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    console.log(this.props.users);\n    return (\n      <div className={classes.root}>\n        <MuiAppBar position=\"static\">\n          <Container>\n            <Toolbar>\n              <Typography variant=\"h6\" className={classes.title}>\n                Portify\n            </Typography>\n              {this.state.userLoged ?\n                <Button color=\"inherit\">{this.props.users.display_name}</Button> :\n                <Button color=\"inherit\" component={LoginLink}>Login</Button>\n              }\n            </Toolbar>\n          </Container>\n        </MuiAppBar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { users } = state;\n  return {\n    users\n  };\n}\n\n\nAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(connect(mapStateToProps)(AppBar));","import CssBaseline from '@material-ui/core/CssBaseline';\nimport React, { Component } from 'react';\nimport AppBar from './components/AppBar';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport queryString from 'query-string';\nimport { config } from './config';\n\nclass Main extends Component {\n    constructor(props){\n        super(props);\n        const hashValues = queryString.parse(this.props.location.hash);\n        if (!localStorage.getItem(config.loggedItem) && hashValues.access_token) {\n            localStorage.setItem(config.loggedItem, JSON.stringify({\n                ...hashValues\n            }));\n            const target = window.self === window.top ? window.opener : window.parent;\n            target.postMessage(\"\");\n        }\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <div>\n                    <AppBar />\n                    <main className={classes.content}>\n                        <div className={classes.appBarSpacer} />\n\n                    </main>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nMain.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withRouter(withStyles({})(Main));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport green from '@material-ui/core/colors/green';\nimport indigo from '@material-ui/core/colors/indigo';\nimport amber from '@material-ui/core/colors/amber';\nimport grey from '@material-ui/core/colors/grey';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n    success: {\n        backgroundColor: green[600],\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    undo: {\n        backgroundColor: grey[900],\n        color: theme.palette.getContrastText(grey[800]),\n    },\n    undoButton :{\n        color : indigo[700]\n    },\n    warning: {\n        backgroundColor: amber[700],\n    },\n    icon: {\n        fontSize: 20,\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing.unit,\n    },\n    close: {\n        padding: theme.spacing.unit / 2,\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n});\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon,\n};\n\nclass MessageSnackbar extends React.Component {\n\n\n    render() {\n        const { classes, className, message, onClose, variant, onUndo, ...other } = this.props;\n        const Icon = variantIcon[variant];\n\n        return (\n            <SnackbarContent\n                className={classNames(classes[variant], className)}\n                aria-describedby=\"client-snackbar\"\n                message={\n                    <span id=\"client-snackbar\" className={classes.message}>\n                        {Icon && <Icon className={classNames(classes.icon, classes.iconVariant)} />}\n                        {message}\n                    </span>\n                }\n                action={[\n                    onUndo && <Button key=\"undo\" className={classes.undoButton} size=\"small\" onClick={onUndo}>\n                        UNDO\n                    </Button>,\n                    <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        className={classes.close}\n                        onClick={onClose}\n                    >\n                        <CloseIcon className={classes.icon} />\n                    </IconButton>,\n                ]}\n                {...other}\n            />\n        );\n    }\n}\n\nMessageSnackbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info', 'undo']).isRequired,\n};\n\nexport default withStyles(styles)(MessageSnackbar);","import MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { createMuiTheme } from '@material-ui/core';\nimport { history } from './helpers';\nimport { config } from './config';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Main from './Main';\nimport Login from './Login'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MessageSnackbar from './components/MessageSnackbar'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#2ebd59\",\n    },\n    //secondary: deepPurple\n  },\n  typography: {\n    useNextVariants: true,\n  },\n  root: {\n    display: 'flex',\n  },\n});\n\nclass App extends React.Component {\n  render() {\n    const { alert } = this.props;\n    return (\n      <Router history={history}>\n        <MuiThemeProvider theme={theme}>\n          {alert.message &&\n            <Snackbar\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              open\n              onClose={alert.onClose || this.handleClose}\n              autoHideDuration={2000}\n            >\n              <MessageSnackbar\n                onClose={alert.onClose || this.handleClose}\n                variant={alert.type}\n                message={alert.message}\n                onUndo={alert.onUndo}\n              />\n            </Snackbar>\n          }\n          <Route path={config.homepage + \"/\"}>\n            <Switch>\n              <Route path={config.homepage + \"/login\"} component={Login} />\n              <Route path={config.homepage + \"/\"} component={Main} />\n            </Switch>\n          </Route>\n        </MuiThemeProvider>\n      </Router>\n    );\n  }\n};\n\nfunction mapStateToProps(state) {\n  const { alert } = state;\n  return {\n    alert\n  };\n}\n\nconst connectedApp = connect(mapStateToProps)(App);\n\nexport { connectedApp as App };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './helpers';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}